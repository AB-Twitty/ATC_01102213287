@using Evenda.UI.Contracts.IHelper
@model EventsListVM

@inject IDropdownHelper _dropdownHelper

@{
    ViewBag.NavActive = "Events";
    ViewBag.TopSearch = Model.Filter.Search;

    ViewData["Title"] = "Events";

    var tagSelect = await _dropdownHelper.GetTagSelectItems(OnlyInUse: true);
    var categorySelect = (await _dropdownHelper.GetCatgorySelectItems())
        .Prepend(new SelectListItem { Text = "All", Value = "all" });

    var routeParams = new Dictionary<string, string?>
    {
        { "sort", Model.Filter.Sort },
        { "dir", Model.Filter.SortDir },
        { "search", Model.Filter.Search },
        { "category", Model.Filter.Category },
        { "tags", Model.Filter.Tags },
        { "from", Model.Filter.FromDate?.ToString() },
        { "to", Model.Filter.ToDate?.ToString() }
    };
}


<div class="wrapper wrapper-content">
    <div class="row">
        <div class="col-lg-12">
            <div class="row">
                <div class="col-xl-2 col-lg-12">
                    <div class="ibox d-flex flex-column" style="height:100%;">
                        <div class="ibox-title ibox-heading" style="padding-right: 8px;">
                            <h5>Filter</h5>
                        </div>
                        <div class="ibox-content flex-grow-1 p-0">
                            <form id="filter-form" asp-controller="Events" asp-action="Index" method="Get">
                                <input hidden asp-for="Filter.Sort" name="sort" />
                                <input hidden asp-for="Filter.SortDir" name="dir" />
                                <input hidden asp-for="Filter.Search" name="search" />

                                <div class="ibox m-0">
                                    <div class="ibox-title p-2 pr-lg-5">
                                        <h5>Category</h5>
                                        <div class="ibox-tools">
                                            <a class="collapse-link" href="">
                                                <i class="fa fa-chevron-up"></i>
                                            </a>
                                        </div>
                                    </div>
                                    <div class="ibox-content ibox-open-border">
                                        <select asp-for="Filter.Category" name="category" class="form-select">
                                            @foreach (var category in categorySelect)
                                            {
                                                <option value="@category.Value" selected="@category.Selected">@category.Text</option>
                                            }
                                        </select>
                                    </div>
                                </div>

                                <div class="ibox m-0">
                                    <div class="ibox-title p-2 pr-lg-5">
                                        <h5>Tags</h5>
                                        <div class="ibox-tools">
                                            <a class="collapse-link" href="">
                                                <i class="fa fa-chevron-up"></i>
                                            </a>
                                        </div>
                                    </div>
                                    <div class="ibox-content ibox-open-border">
                                        <select asp-for="Filter.Tags" name="tags" placeholder="Select Tags..."
                                            multiple class="multiple-select">
                                            @foreach (var tag in tagSelect)
                                            {
                                                bool selected = Model.Filter?.TagIds.Contains(Guid.Parse(tag.Value)) ?? false;
                                                <option value="@tag.Value" selected="@selected">@tag.Text</option>
                                            }
                                        </select>
                                    </div>
                                </div>

                                <div class="ibox m-0">
                                    <div class="ibox-title p-2 pr-lg-5">
                                        <h5>Date</h5>
                                        <div class="ibox-tools">
                                            <a class="collapse-link" href="">
                                                <i class="fa fa-chevron-up"></i>
                                            </a>
                                        </div>
                                    </div>
                                    <div class="ibox-content ibox-open-border">
                                        <div class="input-daterange" id="rangeDatepicker">
                                            <div class="input-group mb-2">
                                                <div class="input-group-text">From</div>
                                                <input asp-for="Filter.FromDate" type="text" value="@DateTime.Now.ToString("MM/dd/yyyy")"
                                                    placeholder="mm/dd/yyyy" class="form-control" name="from">
                                            </div>
                                            <div class="input-group">
                                                <div class="input-group-text" style="padding-right: 1.3rem;padding-left: 1.3rem;">
                                                    To
                                                </div>
                                                <input asp-for="Filter.ToDate" type="text" placeholder="mm/dd/yyyy" class="form-control" name="to">
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <div class="col-sm-offset-2 m-2">
                                        <button class="btn btn-danger" type="reset">Clear</button>
                                        <button class="btn btn-primary" type="submit">Apply</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-xl-10 col-lg-12">

                    <div class="ibox d-flex flex-column" style="height:100%;">
                        <div class="ibox-title ibox-heading">
                            <h5>Events</h5>
                            <div class="ibox-tools" style="top:8px;">
                                <select asp-items="Model.SortingSelectItems" id="sort-select" class="form-select">
                                </select>
                            </div>
                        </div>
                        <div class="ibox-content d-flex flex-column flex-grow-1">
                            @if (Model.Events.Items.Count == 0) {
                                <h1>
                                    <i class="fa-solid fa-calendar-xmark"></i>
                                    No Events Found
                                </h1>
                            }
                            else 
                            {
                                <div class="row">
                                    <p>
                                        @((Model.Events.PageIndex - 1) * Model.Events.PageSize + 1)–@(Math.Min(Model.Events.PageIndex * Model.Events.PageSize, Model.Events.FilterCount)) 
                                        of @Model.Events.FilterCount results
                                    </p>
                                </div>

                                <div class="row">
                                    @foreach(var eventDto in Model.Events.Items) 
                                    {
                                        <div class="col-xl-3 col-lg-4 col-md-6 col-sm-12 mb-3" style="padding-bottom: 1.5rem;">
                                            <div class="ibox d-flex flex-column event-card"style="height:100%;">
                                                <div class="ibox-title p-0" style="position: relative;min-height:185px;">

                                                    <div class="event-day-circle">
                                                        <small>@eventDto.DateTime.ToString("dd MMM")</small>
                                                    </div>
                                                    @if(eventDto.Image == null) {
                                                        <img class="img-fluid mx-auto" style="min-width:100%;" src="/img/default-event.png" alt="Event Image">
                                                    }
                                                    else {
														var imgBase64 = Convert.ToBase64String(eventDto.Image.FileStream);
														var imgSrc = $"data:{eventDto.Image.ContentType};base64,{imgBase64}";

                                                        <img class="img-fluid mx-auto" style="min-width:100%;" src="@imgSrc" alt="Event Image">
                                                    }
                                                </div>

                                                <div class="ibox-content d-flex flex-column flex-grow-1 ibox-heading">
                                                    @if (eventDto.Tags?.Any() ?? false) {
                                                        <div class="d-flex flex-wrap gap-1">
                                                            @foreach(var tag in eventDto.Tags) {
                                                                <p class="m-0" style="font-size:medium;"><span class="badge">@tag</span></p>
                                                            }
                                                        </div>
                                                        <hr />
                                                    }
                                                    
                                                    <h3 class="align-items-center" style="font-weight:600;">
                                                        @eventDto.Name
                                                    </h3>

                                                    <p class="event-price">@eventDto.Price.ToString("c")</p>

                                                    <div class="row">
                                                        <div class="col-7">
                                                            <span><i class="fa fa-calendar-check mr-2"></i>@eventDto.DateTime.ToString("ddd, dd MMM, yyyy")</span>
                                                        </div>
                                                        <div class="col-5 text-right">
                                                            <span><i class="fa fa-clock mr-2"></i>@eventDto.DateTime.ToString("hh:mm tt")</span>
                                                        </div>
                                                    </div>

                                                    @{
                                                        var formattedName = string.Join("-", eventDto.Name.Split(" "));

                                                        var btnClass =
                                                            (eventDto.IsBooked ?? false) ? "btn-info"
                                                            : (eventDto.AvailableTickets <= 0) ? "btn-warning"
                                                            : "btn-primary btn-hover";
                                                    }
                                                    <div class="d-flex mt-auto">
                                                        <a style="width:100%;"
                                                           class="btn @btnClass btn-custom"
                                                           asp-controller="Events"
                                                           asp-action="Details"
                                                           asp-route-id="@eventDto.Id.ToString()"
                                                           asp-route-name="@formattedName">
                                                            @if (eventDto.IsBooked ?? false) //btn-info
                                                            {
                                                                @:Booked <i class="fa-solid fa-check m-1"></i>
                                                            }
															else if (eventDto.AvailableTickets <= 0) //btn-warning
															{
																@:Sold Out <i class="fa-solid fa-xmark m-1"></i>
															}
                                                            else //btn-primary btn-custom
                                                            {
                                                                @:Book Now <i class="fa-solid fa-plus m-1"></i>
                                                            }
                                                        </a>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }

                            @{
                                var paginationModel = new PaginationVM
                                {
                                    Controller = "Events",
                                    Action = "Index",
                                    CurrentPage = Model.Events.PageIndex,
                                    TotalPages = Model.Events.TotalPages,
                                    RouteParams = routeParams
                                };
                            }
                            <partial name="_PaginationButtons" model="paginationModel" />

                        </div>
                    </div>


                </div>

            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $("#rangeDatepicker").datepicker({
                keyboardNavigation: !1,
                forceParse: !1,
                autoclose: !0,
                format: "mm/dd/yyyy"
            });

            VirtualSelect.init({
                ele: '.multiple-select',
                dropboxWrapper: 'self',
                optionsCount: 5,
                allowNewOption: false,
                optionsSelectedText: 'options selected',
                allOptionsSelectedText: 'All',
                showValueAsTags: true,
                noOfDisplayValues: 5,
                alwaysShowSelectedOptionsLabel: false,
                dropboxWidth: "100%",
                focusSelectedOptionOnOpen: true,
                showDropboxAsPopup: true,
                popupDropboxBreakpoint: '576px',
                popupPosition: 'center',
                hideValueTooltipOnSelectAll: true,
                maxWidth: '100%'
            });

            $('#sort-select').on('change', function() {
                var val = $(this).val().split('|');
                $('input[name="sort"]').val(val[0]);
                $('input[name="dir"]').val(val[1]);
                $('#filter-form').submit();
            });
            var currentSort = $('input[name="sort"]').val();
            var currentDir = $('input[name="dir"]').val();
            $('#sort-select').val(currentSort + "|" + currentDir);
        });
    </script>
}